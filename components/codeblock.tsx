const codingSeq: [number, string, string][] = [
  [0, "\n", ""],
  [0, "\n", ""],
  [0, " ", ""],
  [0, "", " "],
  [0, " ", ""],
  [0, "", " "],
  [0, " ", ""],
  [0, "", " "],
  [0, " ", ""],
  [0, "", " "],
  [1, "i", ""],
  [2, "n", ""],
  [3, "t", ""],
  [4, " ", ""],
  [5, "m", ""],
  [6, "a", ""],
  [7, "i", ""],
  [8, "n", ""],
  [9, "(", ""],
  [10, ")", ""],
  [11, "{", ""],
  [12, "}", ""],
  [12, "\n", ""],
  [13, "\n", ""],
  [13, "\t", ""],
  [14, "p", ""],
  [15, "r", ""],
  [16, "i", ""],
  [17, "n", ""],
  [18, "t", ""],
  [19, "f", ""],
  [20, "(", ""],
  [21, ")", ""],
  [22, ";", ""],
  [21, '"', ""],
  [22, '"', ""],
  [22, "H", ""],
  [23, "e", ""],
  [24, "l", ""],
  [25, "l", ""],
  [26, "o", ""],
  [27, ",", ""],
  [28, " ", ""],
  [29, "W", ""],
  [30, "o", ""],
  [31, "r", ""],
  [32, "l", ""],
  [33, "d", ""],
  [34, "!", ""],
  [40, "\n", ""],
  [38, " ", ""],
  [38, "", " "],
  [38, " ", ""],
  [38, "", " "],
  [38, " ", ""],
  [38, "", " "],
  [38, " ", ""],
  [38, "", " "],
  [38, " ", ""],
  [38, "", " "],
  [38, " ", ""],
  [38, "", " "],
  [38, " ", ""],
  [38, "", " "],
  [38, " ", ""],
  [38, "", " "],
  [0, "", 'int main(){\n\tprintf("Hello, World!");\n}\n'],
  [0, "\n\n\n\n", ""],
  [2, "n", ""],
  [3, "o", ""],
  [4, "w", ""],
  [5, " ", ""],
  [6, "l", ""],
  [7, "o", ""],
  [8, "a", ""],
  [9, "d", ""],
  [10, "i", ""],
  [11, "n", ""],
  [12, "g", ""],
  [13, " ", ""],
  [14, ".", ""],
  [15, " ", ""],
  [15, "", " "],
  [15, ".", ""],
  [16, " ", ""],
  [16, "", " "],
  [16, ".", ""],
  [17, " ", ""],
  [17, "", " "],
  [2, "", "now loading ..."],
  [1, "i", ""],
  [2, "n", ""],
  [3, "t", ""],
  [4, " ", ""],
  [5, "m", ""],
  [6, "a", ""],
  [7, "i", ""],
  [8, "n", ""],
  [9, "(", ""],
  [10, ")", ""],
  [11, "{", ""],
  [12, "}", ""],
  [15, "", "\n"],
  [15, "", "\n"],
  [12, "\n", ""],
  [13, "\n", ""],
  [13, "\t", ""],
  [14, "i", ""],
  [15, "n", ""],
  [16, "t", ""],
  [17, " ", ""],
  [18, "i", ""],
  [19, ",", ""],
  [20, " ", ""],
  [21, "c", ""],
  [22, "o", ""],
  [23, "u", ""],
  [24, "n", ""],
  [25, "t", ""],
  [26, "=", ""],
  [27, "0", ""],
  [28, ",", ""],
  [29, " ", ""],
  [30, "m", ""],
  [31, "a", ""],
  [32, "x", ""],
  [33, "=", ""],
  [34, "1", ""],
  [35, "0", ""],
  [36, "0", ""],
  [37, "0", ""],
  [38, "0", ""],
  [39, "0", ""],
  [40, ";", ""],
  [42, "\n", ""],
  [42, "\t", ""],
  [43, "d", ""],
  [44, "o", ""],
  [45, "u", ""],
  [46, "b", ""],
  [47, "l", ""],
  [48, "e", ""],
  [49, " ", ""],
  [50, "x", ""],
  [51, ",", ""],
  [52, "y", ""],
  [53, ",", ""],
  [54, "z", ""],
  [55, ",", ""],
  [56, "p", ""],
  [57, "i", ""],
  [58, ";", ""],
  [60, "\n", ""],
  [61, "\n", ""],
  [61, "\t", ""],
  [62, "s", ""],
  [63, "r", ""],
  [64, "a", ""],
  [65, "n", ""],
  [66, "d", ""],
  [67, "(", ""],
  [68, ")", ""],
  [69, ";", ""],
  [68, "t", ""],
  [69, "i", ""],
  [70, "m", ""],
  [71, "e", ""],
  [72, "(", ""],
  [74, ")", ""],
  [73, "N", ""],
  [74, "U", ""],
  [75, "L", ""],
  [76, "L", ""],
  [81, "\n", ""],
  [81, "\t", ""],
  [82, "f", ""],
  [83, "o", ""],
  [84, "r", ""],
  [85, "(", ""],
  [86, ")", ""],
  [86, "i", ""],
  [87, "=", ""],
  [88, "0", ""],
  [89, ";", ""],
  [90, "i", ""],
  [91, "<", ""],
  [92, "m", ""],
  [93, "a", ""],
  [94, "x", ""],
  [95, ";", ""],
  [96, "i", ""],
  [97, "+", ""],
  [98, "+", ""],
  [100, "{", ""],
  [101, "}", ""],
  [101, "\n", ""],
  [102, "\t", ""],
  [103, "\n", ""],
  [104, "\t", ""],
  [103, "\t", ""],
  [104, "x = (double)rand()/RAND_MAX;", ""],
  [133, "\n", ""],
  [133, "\t", ""],
  [134, "\t", ""],
  [135, "y = (double)rand()/RAND_MAX;\n", ""],
  [164, "\t", ""],
  [165, "\t", ""],
  [166, "z = x*x + y*y;\n", ""],
  [181, "\t", ""],
  [182, "\t", ""],
  [183, "if(z<1) count++;", ""],
  [203, "\n", ""],
  [203, "\t", ""],
  [204, "p", ""],
  [205, "i", ""],
  [206, "=", ""],
  [207, "(", ""],
  [208, ")", ""],
  [208, "d", ""],
  [209, "o", ""],
  [210, "u", ""],
  [211, "b", ""],
  [212, "l", ""],
  [213, "e", ""],
  [215, "c", ""],
  [216, "o", ""],
  [217, "u", ""],
  [218, "n", ""],
  [219, "t", ""],
  [220, "/", ""],
  [221, "m", ""],
  [222, "a", ""],
  [223, "x", ""],
  [224, "*", ""],
  [225, "4", ""],
  [226, ";", ""],
  [225, " ", ""],
  [224, " ", ""],
  [221, " ", ""],
  [220, " ", ""],
  [232, "\n", ""],
  [232, "\t", ""],
  [233, "p", ""],
  [234, "r", ""],
  [235, "i", ""],
  [236, "n", ""],
  [237, "t", ""],
  [238, "f", ""],
  [239, "(", ""],
  [240, ")", ""],
  [240, '"', ""],
  [241, '"', ""],
  [241, "%", ""],
  [242, "f", ""],
  [243, "\\", ""],
  [244, "n", ""],
  [246, ",", ""],
  [247, "p", ""],
  [248, "i", ""],
  [250, ";", ""],
  [252, "\n", ""],
  [252, "\t", ""],
  [253, "r", ""],
  [254, "e", ""],
  [255, "t", ""],
  [256, "u", ""],
  [257, "r", ""],
  [258, "n", ""],
  [259, " ", ""],
  [260, "0", ""],
  [261, ";", ""],
  [262, " ", ""],
];
import hljs from "highlight.js/lib/core";
hljs.registerLanguage("c", require("highlight.js/lib/languages/c"));
type Props = {
  code: string;
};
function CodeBlock(props: Props) {
  const highlightedCode: string = hljs.highlight(props.code, {
    language: "c",
  }).value;

  return (
    <pre>
      <code dangerouslySetInnerHTML={{ __html: highlightedCode }} />
    </pre>
  );
}

export default CodeBlock;
export { codingSeq };
